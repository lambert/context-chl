//////////////////////////////////////////////////////////////////////////////
// Ogre Material Script
//
// Original by SiENcE, converted to ConTEXT by pra
// http://www.ogre3d.org/phpBB2/viewtopic.php?t=33835
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// language name

Language:               Ogre Material Script


//////////////////////////////////////////////////////////////////////////////
// default file filter
// note: if more than one extension is associated, eg:
// C/C++ files (*.c,*.cpp,*.h,*.hpp)|*.c;*.cpp;*.h;*.hpp

Filter:                 Ogre Material Script (*.material) | *.material


//////////////////////////////////////////////////////////////////////////////
// help file which will be invokend when F1 is pressed

// Put your path here!!!



//////////////////////////////////////////////////////////////////////////////
// language case sensitivity
//                      0  - no
//                      1  - yes

CaseSensitive:          0


//////////////////////////////////////////////////////////////////////////////
// comment type: LineComment - comment to the end of line
// BlockCommentBeg - block comment begin, it could be
// multiline
// BlockCommentEnd - block comment end

LineComment:            //
BlockCommentBeg:        /*
BlockCommentEnd:        */


//////////////////////////////////////////////////////////////////////////////
// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char



IdentifierBegChars:     a..z A..Z _
IdentifierChars:        a..z A..Z _ 0..9

//////////////////////////////////////////////////////////////////////////////
// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstBegChars:       0..9


//////////////////////////////////////////////////////////////////////////////
// numeric constants characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstChars:          0..9


//////////////////////////////////////////////////////////////////////////////
// escape character

EscapeChar:                 \


//////////////////////////////////////////////////////////////////////////////
// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into two groups which can be
// highlighted differently


KeyWords1: material technique pass texture_unit vertex_program_ref fragment_program_ref
           shadow_caster_vertex_program_ref shadow_receiver_fragment_program_ref
           shadow_receiver_vertex_program_ref fragment_program

KeyWords2: int half float float2 float3 float4 float3x3 float3x4 float4x3 float4x4
           double worldviewproj_matrix ambient_light_colour light_position_object_space
           light_diffuse_colour custom world_matrix_array_3x4 viewproj_matrix
           light_specular_colour camera_position_object_space light_position

KeyWords3: blend_diffuse_alpha src_texture src_current colour_blend on off alpha_blend none
           clamp linear always_pass wrap trilinear point mirror once_per_light add
           dest_colour zero replace combinedUVW spherical one separateUV cubic_reflection
           HDR true false scale_x scale_y sine shadow PF_BYTE_LA Input time_0_x anisotropic
           clockwise anticlockwise front back

KeyWords4:  param_named filtering cull_hardware cull_software depth_check texture
            max_anisotropy tex_address_mode colour_op_ex alpha_op_ex
            colour_op_multipass_fallback colour_op_ex set_texture_alias ambient diffuse
            specular emissive scene_blend env_map lighting cubic_texture point_sprites
            point_size point_size_attenuation depth_write alpha_rejection content_type
            depth_func tex_coord_set param_named_auto iteration colour_op scheme scroll_anim
            fog_override rotate_anim wave_xform

//////////////////////////////////////////////////////////////////////////////
// string delimiter: StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings, as perl
// has it

StringBegChar:          " '
StringEndChar:          " '
MultilineStrings:       0


//////////////////////////////////////////////////////////////////////////////
// use preprocessor: 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be
// highlighted with Preprocessor defined colors

// we use this to make an additional comment

UsePreprocessor:        1


//////////////////////////////////////////////////////////////////////////////
// highlight line: 0 - no
// 1 - yes
// note: if yes, current line will be highlighted

CurrLineHighlighted:    0


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                        and third (optional) represents font attribute:
//                        B - bold
//                        I - italic
//                        U - underline
//                        S - strike out
//                        attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                        clBlack, clMaroon, clGreen, clOlive, clNavy,
//                        clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                        clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                        clDkGray, clWhite, clScrollBar, clBackground,
//                        clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                        clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                        clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                        clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                        clGrayText, clBtnText, clInactiveCaptionText,
//                        clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                        clInfoBk
//                      as value, it could be used hex numeric constant too:
//                        $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               clWindowText clWindow
Keyword1Col:            clNavy clWindow B
Keyword2Col:            clRed clWindow
Keyword3Col:            clBlue clWindow B
Keyword4Col:            clPurple clWindow
IdentifierCol:          clWindowText clWindow
CommentCol:             clGray clWindow
NumberCol:              clRed clWindow
StringCol:              clRed clWindow
SymbolCol:              clGray clWindow
PreprocessorCol:        clGray clWindow
SelectionCol:           clWhite clNavy
CurrentLineCol:         clBlack clYellow




