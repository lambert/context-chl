/////////////////////////////////////////////////////////////////////////////////////////////
//
// HI-Tech C for PIC highlighter written by Philippe Corbes, philippe.corbes@laposte.net
//
/////////////////////////////////////////////////////////////////////////////////////////////

Language:               PIC-C
Filter:                 HI-Tech C files (*.c,*.h)|*.c;*.h
HelpFile:
CaseSensitive:          1
LineComment:            //
BlockCommentBeg:        /*
BlockCommentEnd:        */
IdentifierBegChars:     a..z A..Z _%@.
IdentifierChars:        a..z A..Z _ 0..9 ?
NumConstBegChars:       0..9
NumConstChars:          0..9 abcdefhxABCDEF
EscapeChar:

KeyWords1:   
    //  reserved_words
	auto asm bit break case char code const continue control data default define defined delete do double else enum endif 
	explicit extern false float goto new for if ifndef inline int interrupt isr long main mutable naked NULL near 
	noreturn pragma private protected public register return short signed sizeof static struct switch template 
	throw true typedef typeid typename uchar ulong union unsigned ushort using uuid virtual void 
	volatile while bank1 bank2 bank3 bank4 bank5 bank6 bank 7 bank8 bank15  

    //  assert_h
	__mkstr__ _fassert assert

    //  conio_h
	offsetof init_uart getch getche putch ungetch kbhit cgets cputs 

    //  ctype_h
	isalpha isupper islower isdigit isxdigit isspace ispunct isalnum isprint isgraph iscntrl 
	toupper tolower isascii toascii

    //  errno_h
	EINVAL ENOENT NOPATH EMFILE EACCESS EBADF EMCBD ENOMEM EIMBA 
	EINVENV ENOEXEC EPERM EDATA EDRIVE ECURDIR EXDEV ENFILE 

    //  float_h
	DBL_RADIX DBL_ROUNDS FLT_RADIX FLT_ROUNDS
	FLT_MANT_DIG FLT_EPSILON FLT_DIG FLT_MIN_EXP FLT_MIN FLT_MIN_10_EXP FLT_MAX_EXP FLT_MAX FLT_MAX_10_EXP 
	DBL_MANT_DIG DBL_EPSILON DBL_DIG DBL_MIN_EXP DBL_MIN DBL_MIN_10_EXP DBL_MAX_EXP DBL_MAX DBL_MAX_10_EXP 
	LDBL_MANT_DIG LDBL_EPSILON LDBL_DIG LDBL_MIN_EXP LDBL_MIN LDBL_MIN_10_EXP LDBL_MAX_EXP LDBL_MAX LDBL_MAX_10_EXP 

    //  hitech_h
	BOOL FAST UFAST BYTE INT_16 UINT_16 INT_32 UINT_32

    //  intrpt_h
	_imkstr_ set_vector ROM_VECTOR RAM_VECTOR INIT_BYTE _RAM_VEC _Lvectors CHANGE_VECTOR READ_RAM_VECTOR 

    //  limits_h
	CHAR_BIT CHAR_MAX CHAR_MIN SCHAR_MAX SCHAR_MIN UCHAR_MAX SHRT_MAX SHRT_MIN 
	USHRT_MAX INT_MAX INT_MIN UINT_MAX LONG_MAX LONG_MIN ULONG_MAX 

    //  math_h
	fabs floor ceil modf sqrt atof sin cos tan asin acos atan atan2 frexp 
	ldexp log log10 pow exp sinh cosh tanh eval_poly

    //  pic_h
	CLRWDT SLEEP ___mkstr1 ___mkstr __CONFIG __IDLOC __EEPROM_DATA ei di
	_READ_OSCCAL_DATA EEPROM_WRITE EEPROM_READ get_cal_data FLASH_WRITE
	FLASH_READ 

    //  setjmp_h
	jmp_buf setjmp longjmp

    //  stdarg_h
	va_list va_start va_arg va_end __va_start _STACK_ALIGN

    //  stddef_h
	ptrdiff_t size_t wchar_t offsetof errno

    //  stdio_h
	BUFSIZ _NFILE _iobuf FILE L_tmpnam _MAXTFILE _tfiles __prbuf
	_IOFBF _IOREAD _IOWRT _IORW _IONBF _IOMYBUF _IOEOF _IOERR 
	_IOSTRG _IOBINARY _IOLBF _IODIRN _IOAPPEND _IOSEEKED _IOTMPFILE 
	EOF _IOSTRING SEEK_SET SEEK_CUR SEEK_END TMP_MAX 
	stdin stdout stderr getchar putchar 
	cprintf printf_check _doprnt getc putc 
	feof ferror fileno clrerr clreof clearerr 
	_flsbuf _filbuf fclose fflush fgetc ungetc fputc getw putw fputs fread fwrite 
	fseek rewind setbuf setvbuf fprintf fscanf vfprintf vfscanf remove rename 
	fopen freopen fdopen ftell fgets perror _bufallo _buffree tmpnam tmpfile _doscan 
	sprintf printf gets puts scanf sscanf vprintf vsprintf vscanf vsscanf

    //  stdlib_h
	RAND_MAX EXIT_SUCCESS EXIT_FAILURE
	div_t udiv_t ldiv_t uldiv_t
	atof strtod atoi xtoi atol rand srand calloc div udiv ldiv uldiv _lrotl _lrotr _rotl _rotr 
	max min malloc free realloc _non_ems_alloc _non_ems_sbrk 
	abort exit atexit getenv environ system qsort bsearch abs labs

    //  string_h
	__CONST memcpy memmove memset strcat strcpy strncat strncpy strdup strtok memcmp strcmp 
	stricmp strncmp strnicmp strcoll memchr strcspn strpbrk strspn strstr stristr strerror 
	strlen strchr strichr strrchr strrichr

    //  sys_h
	getfreemem execl execv execve execle execvp execlp getpid mktemp spawnl spawnv 
	spawnle spawnve spawnlp spawnvp chdir chdrv mkdir rmdir getcwd persist_validate 
	persist_check getdrv _getargs _argc_ sbrk brk _iob _pnum _fnum

    //  time_h
	tm time_t CLOCKS_PER_SEC clock difftime time_zone time stime asctime ctime gmtime 
	localtime mktime strftime

KeyWords2:   // reg_definition
	TMR0 PCL STATUS FSR PORTA PORTB PORTC PORTD PORTE PCLATH INTCON PIR1 PIR2 TMR1L TMR1H T1CON
	TMR2 T2CON SSPBUF SSPCON CCPR1L CCPR1H CCP1CON RCSTA TXREG RCREG CCPR2L CCPR2H CCP2CON ADRESH
	ADCON0 OPTION TRISA TRISB TRISC TRISD TRISE PIE1 PIE2 PCON SSPCON2 PR2 SSPADD SSPSTAT WPUB 
	IOCB P1DEL TXSTA SPBRG REFCON LVDCON ANSEL ADRESL ADCON1 PMDATL PMADRL PMDATH PMADRH UIR UIE 
	UEIR UEIE USTAT UCTRL UADDR USWSTAT UEP0 UEP1 UEP2 BD0OST BD1OST BD2OST BD0IST BD1IST BD2IST 
	BD0OBC BD1OBC BD2OBC BD0IBC BD1IBC BD2IBC BD0OAL BD1OAL BD2OAL BD0IAL BD1IAL BD2IAL USBMEM
	RTCC OSCCAL GPIO TRIS ADRES CMCON TRISIO WPU VRCON EEDATA
	EEADR EECON1 EECON2 ADTMRL ADTMRH I2CBUF I2CCON ADCAP ADCAPL ADCAPH
	SLPCON I2CADD I2CSTAT PREFA PREFB MISC LININTF OPTION2 EEINTF
	KREF KBG VTHERM KTC OSCM TWDT TRM0 DATACCP TRISCCP INDF CALCON PSMCCON0 PSMCCON0 PSMCCON1 
	CM1CON0 CM2CON0 CM2CON1 OPACON DAC DACON0 PMCON1 EEDATH EEADRH CVRCON 
	PMDATA PMADR OSCCON OSCTUNE PORTF PORTG LCDSE LCDPS LCDCON LCDD00 LCDD01 
	LCDD02 LCDD03 LCDD04 LCDD05 LCDD06 LCDD07 LCDD08 LCDD09 LCDD10 LCDD11 LCDD12 
	LCDD13 LCDD14 LCDD15 TRISF TRISG FSR0 ALUSTA T0STA CPUSTA INTSTA INDF1 FSR1 
	WREG TMR0L TMR0H TBLPTRL TBLPTRH BSR PRODL PRODH DDRB RCSTA1 RCREG1 TXSTA1 
	TXREG1 SPBRG1 DDRC DDRD DDRE TMR1 TMR3L TMR3H PR1 PR3L PR3H PW1DCL PW2DCL 
	PW1DCH PW2DCH CA2L CA2H TCON1 TCON2 RCSTA2 RCREG2 TXSTA2 TXREG2 SPBRG2 DDRF
	DDRG SSPCON1 PW3DCL PW3DCH CA3L CA3H CA4L CA4H TCON3 DDRH PORTH DDRJ PORTJ TSTMD1 TSTMD2 
	PIR PIE 

KeyWords3:   // bit_definition
	TMR07 TMR06 TMR05 TMR04 TMR03 TMR02 TMR01 TMR00
	PCL7 PCL6 PCL5 PCL4 PCL3 PCL2 PCL1 PCL0 IRP RP1 RP0 TO PD ZERO DC CARRY
	RA7 RA6 RA5 RA4 RA3 RA2 RA1 RA0 RB7 RB6 RB5 RB4 RB3 RB2 RB1 RB0
	RC7 RC6 RC5 RC4 RC3 RC2 RC1 RC0 RD7 RD6 RD5 RD4 RD3 RD2 RD1 RD0
	RE2 RE1 RE0 GIE PEIE T0IE INTE RBIE T0IF INTF RBIF
	PSPIF ADIF RCIF TXIF USBIF SSPIF CCP1IF TMR2IF TMR1IF LVDIF BCLIF CCP2IF
	TMR1L7 TMR1L6 TMR1L5 TMR1L4 TMR1L3 TMR1L2 TMR1L1 TMR1L0
	TMR1H7 TMR1H6 TMR1H5 TMR1H4 TMR1H3 TMR1H2 TMR1H1 TMR1H0 
	TMR27 TMR26 TMR25 TMR24 TMR23 TMR22 TMR21 TMR20 
	T1CKPS1 T1CKPS0 T1OSCEN T1SYNC TMR1CS TMR1ON 
	TOUTPS3 TOUTPS2 TOUTPS1 TOUTPS0 TMR2ON T2CKPS1 T2CKPS0 
	SSPBUF7 SSPBUF6 SSPBUF5 SSPBUF4 SSPBUF3 SSPBUF2 SSPBUF1 SSPBUF0 
	WCOL SSPOV SSPEN CKP SSPM3 SSPM2 SSPM1 SSPM0 
	CCPR1L7 CCPR1L6 CCPR1L5 CCPR1L4 CCPR1L3 CCPR1L2 CCPR1L1 CCPR1L0 
	CCPR1H7 CCPR1H6 CCPR1H5 CCPR1H4 CCPR1H3 CCPR1H2 CCPR1H1 CCPR1H0 
	PWM1M1 PWM1M0 DC1B1 DC1B0 CCP1X CCP1Y CCP1M3 CCP1M2 CCP1M1 CCP1M0 
	SPEN RX9 SREN CREN ADDEN FERR OERR RX9D CCP2X CCP2Y DC2B1 DC2B0 
	CCP2M3 CCP2M2 CCP2M1 CCP2M0 ADCS1 ADCS0 CHS2 CHS1 CHS0 GO ADGO CHS3 ADON 
	ADRESH7 ADRESH6 ADRESH5 ADRESH4 ADRESH3 ADRESH2 ADRESH1 ADRESH0 
	RBPU INTEDG T0CS T0SE PSA PS2 PS1 PS0 
	TRISA7 TRISA6 TRISA5 TRISA4 TRISA3 TRISA2 TRISA1 TRISA0 
	TRISB7 TRISB6 TRISB5 TRISB4 TRISB3 TRISB2 TRISB1 TRISB0 
	TRISC7 TRISC6 TRISC5 TRISC4 TRISC3 TRISC2 TRISC1 TRISC0 
	TRISD7 TRISD6 TRISD5 TRISD4 TRISD3 TRISD2 TRISD1 TRISD0 
	IBF OBF IBOV PSPMODE TRISE2 TRISE1 TRISE0 
	PSPIE ADIE RCIE TXIE USBIE SSPIE CCP1IE TMR2IE TMR1IE 
	LVDIE BCLIE CCP2IE OSCF POR BOR 
	GCEN ACKSTAT ACKDT ACKEN RCEN PEN RSEN SEN 
	STAT_SMP STAT_CKE STAT_DA STAT_P STAT_S STAT_RW STAT_UA STAT_BF 
	PR27 PR26 PR25 PR24 PR23 PR22 PR21 PR20 
	SSPADD7 SSPADD6 SSPADD5 SSPADD4 SSPADD3 SSPADD2 SSPADD1 SSPADD0 
	WPUB7 WPUB6 WPUB5 WPUB4 WPUB3 WPUB2 WPUB1 WPUB0 
	IOCB7 IOCB6 IOCB5 IOCB4 IOCB3 IOCB2 IOCB1 IOCB0 
	P1DEL7 P1DEL6 P1DEL5 P1DEL4 P1DEL3 P1DEL2 P1DEL1 P1DEL0 
	CSRC TX9 TXEN SYNC BRGH TRMT TX9D 
	VRHEN VRLEN VRHOEN VRLOEN BGST LVDEN LV3 LV2 LV1 LV0 
	ANSEL5 ANSEL4 ANSEL3 ANSEL2 ANSEL1 ANSEL0 
	ADRESL7 ADRESL6 ADRESL5 ADRESL4 ADRESL3 ADRESL2 ADRESL1 ADRESL0 
	ADFM VCFG2 VCFG1 VCFG0 PCFG3 PCFG2 PCFG1 PCFG0 
	PMDATL7 PMDATL6 PMDATL5 PMDATL4 PMDATL3 PMDATL2 PMDATL1 PMDATL0 
	PMADRL7 PMADRL6 PMADRL5 PMADRL4 PMADRL3 PMADRL2 PMADRL1 PMADRL0 
	PMDATH5 PMDATH4 PMDATH3 PMDATH2 PMDATH1 PMDATH0 
	PMADRH3 PMADRH2 PMADRH1 PMADRH0 
	STALL UIDLE TOK_DONE ACTIVITY UERR USB_RST 
	STALL_E UIDLE_E TOK_DONE_E ACTIVITY_E UERR_E USB_RST_E 
	BTS_ERR OWN_ERR WRT_ERR BTO_ERR DFN8 CRC16 CRC5 PID_ERR 
	BTS_ERR_E OWN_ERR_E WRT_ERR_E BTO_ERR_E DFN8_E CRC16_E CRC5_E PID_ERR_E 
	ENDP1 ENDP0 IN SEO PKT_DIS DEV_ATT RESUME SUSPND 
	ADDR6 ADDR5 ADDR4 ADDR3 ADDR2 ADDR1 ADDR0 
	SWSTAT7 SWSTAT6 SWSTAT5 SWSTAT4 SWSTAT3 SWSTAT2 SWSTAT1 SWSTAT0 
	EP_CTL_DIS0 EP_OUT_EN0 EP_IN_EN0 EP_STALL0 
	EP_CTL_DIS1 EP_OUT_EN1 EP_IN_EN1 EP_STALL1 
	EP_CTL_DIS2 EP_OUT_EN2 EP_IN_EN2 EP_STALL2 
	UOWN_0O DATA_0O PID3_0O PID2_0O PID1_0O PID0_0O 
	UOWN_0I DATA_0I PID3_0I PID2_0I PID1_0I PID0_0I 
	UOWN_1O DATA_1O PID3_1O PID2_1O PID1_1O PID0_1O 
	UOWN_1I DATA_1I PID3_1I PID2_1I PID1_1I PID0_1I 
	UOWN_2O DATA_2O PID3_2O PID2_2O PID1_2O PID0_2O 
	UOWN_2I DATA_2I PID3_2I PID2_2I PID1_2I PID0_2I 
	CONFIG_ADDR	BOREN BORDIS BORV25 BORV27 BORV42 BORV45 
	VBOR_25 VBOR_27 VBOR_42 VBOR_45 VBOR_OFF 
	PROTECT PROTECT75 PROTECT50 UNPROTECT CPD RCCLK RCIO INTCLK INTIO 
	WDTEN PWRTDIS WDTDIS PWRTEN MCLREN MCLRDIS WDTDIS PWRTEN 
	LP XT HS EC INTRCIO INTRCCLKO ERIO ERCLKO EXTRCIO
	RC HS XT LP EC HS E4 H4 EXTRC INTRC CALFST CALSLW MCLRN 
	GPWUF PA0 GPWU GPPU CAL5 CAL4 CAL3 CAL2 CAL1 CAL0 SCL SDA
	GP5 GP4 GP3 GP2 GP1 GP0 EEPROM_SIZE GPIE GPIF GODONE
	TRIS5 TRIS4 TRIS3 TRIS2 TRIS1 TRIS0 GPIO0 GPIO1 GPIO2 GPIO3
	GPIO4 GPIO5 CMIF EEIF TMR1GE CM0 CM1 CM2 CIS CINV COUT VCFG
	CMIE EEIE BOD WPU0 WPU1 WPU2 WPU4 WPU5 VR0 VR1 VR2 VR3 VRR
	VREN RD WR WREN WRERR ANS0 ANS1 ANS2 ANS3 ADCS2 PBIF I2CIF 
	ADCIF OVFIF I2COV I2CEN I2CM3 I2CM2 I2CM1 I2CM0 ADCS3 AMUXOE 
	ADRST ADZERO RCPU PBIE I2CIE ADCIE OVFIE LVD HIBEN REFOFF LSOFF
	OSCOFF CMOFF TEMPOFF ADOFF PRA7 PRA6 PRA5 PRA4 PRA3 PRA2 PRA1 PRA0
	PRB7 PRB6 PRB5 PRB4 PRB3 PRB2 PRB1 PRB0 CMBOUT CMBOE CPOLB CMAOUT
	CMAOE CPOLA SMHOG SPGNDB SPGNDA I2CSEL SMBUS INCLKEN OSC2 OSC1
	ADDAC3 ADDAC2 ADDAC1 ADDAC0 Z C LINTX LINRX ADRES7 ADRES6 ADRES5
	ADRES4 ADRES3 ADRES2 ADRES1 ADRES0 GO_DONE C2OUT C1OUT TLINRX 
	LINTX LINV VROE RBWUF RBWU EXTRCRB4 INTRCRB4 RPO PA1 WPC SWE RL
	SL BL BE WDTE_ON WDTE_OFF BODEN_ON BODEN_OFF EESCL EESDA EEVDD 
	OBIF MPECS PER MPEEN MPEDIS DCCP DT1CK TCCP TT1CK SMP CKE C2IF 
	C1IF TMR10N C2IE C1IE WDTCON PMD7 PMD6 PMD5 PMD4 PMD3 PMD2 PMD1 PMD0
	PMA7 PMA6 PMA5 PMA4 PMA3 PMA2 PMA1 PMA0 PMD13 PMD12 PMD11 PMD10 PMD9
	PMD8 PMA10 PMA9 PMA8 CAL CALERR CALREF SMCCL1 SMCCL0 MINDC1 MINDC0
	MAXDC1 MAXDC0 DC1 DC0 SMCON S1APOL S1BPOL SCEN SMCOM PWMPSM SMCCS
	C1ON C1OE C1POL C1SP C1R C1CH1 C1CH0 C2ON C2OE C2POL C2SP C2R C2CH1
	C2CH0 MC1OUT MC2OUT C2SYNC OPAON CMPEN GBWP DA7 DA6 DA5 DA4 DA3 DA2 
	DA1 DA0 DAON DAOE DARS1 DARS0 RCCLKO MCLR MCLRDI DATPROT DATUNPROT 
	DP TMR0IE TMR0IF C2INV C1INV CVREN CVROE CVRR CVR3 CVR2 CVR1 CVR0
	EEPGD LVPEN LVPDIS DPROT DUNPROT WRTEN WP1 WP2 WP3 WRTDIS DEBUGEN 
	DEBUGDIS PROTECT_TOP ADEN MCLRIO FLTS IOFS IRCF0 IRCF1 IRCF2 TUN0 
	TUN1 TUN2 TUN3 TUN4 TUN5 BF UA RW START STOP DA FREE CCPRB2 CCPRB3 
	WP0 PMDATA7 PMDATA6 PMDATA5 PMDATA4 PMDATA3 PMDATA2 PMDATA1 PMDATA0 
	PMADR7 PMADR6 PMADR5 PMADR4 PMADR3 PMADR2 PMADR1 PMADR0 PMADRH4 
	RE7 RE6 RE5 RE4 RE3 LCDIF CCPIY TRISE7 TRISE6 TRISE5 TRISE4 TRISE3 
	LCDIE RF7 RF6 RF5 RF4 RF3 RF2 RF1 RF0 RG7 RG6 RG5 RG4 RG3 RG2 RG1 
	RG0 SE29 SE27 SE20 SE16 SE12 SE9 SE5 SE0 LP3 LP2 LP1 LP0 LCDEN 
	SLPEN VGEN CS1 CS0 LMUX1 LMUX0 TRISF7 TRISF6 TRISF5 TRISF4 TRISF3 
	TRISF2 TRISF1 TRISF0 TRISG7 TRISG6 TRISG5 TRISG4 TRISG3 TRISG2 
	TRISG1 TRISG0 FOSC0 FOSC1 BODEN FS3 FS2 FS1 FS0 OV PS3 STKAV GLINTD 
	PEIF T0CKIF T0CKIE  DDRB7 DDRB6 DDRB5 DDRB4 DDRB3 DDRB2 DDRB1 DDRB0 
	SPEN1 RX91 SREN1 CREN1 FERR1 OERR1 RX9D1 CSRC1 TX91 TXEN1 SYNC1 TRMT1 
	TX9D1 DDRC7 DDRC6 DDRC5 DDRC4 DDRC3 DDRC2 DDRC1 DDRC0 DDRD7 DDRD6 DDRD5 
	DDRD4 DDRD3 DDRD2 DDRD1 DDRD0 DDRE3 DDRE2 DDRE1 DDRE0 TMR3IF CA2IF CA1IF 
	TX1IF RC1IF TMR3IE CA2IE CA1IE TX1IE RC1IE DC1PW1 DC0PW1 DC1PW2 DC0PW2 
	TM2PW2 DC9PW1 DC8PW1 DC7PW1 DC6PW1 DC5PW1 DC4PW1 DC3PW1 DC2PW1 DC9PW2 
	DC8PW2 DC7PW2 DC6PW2 DC5PW2 DC4PW2 DC3PW2 DC2PW2 CA2ED1 CA2ED0 CA1ED1 
	CA1ED0 T16 TMR3CS TMR2CS CA2OVF CA1OVF PWM2ON PWM1ON CA1 TMR3ON CA4IF 
	CA3IF TX2IF RC2IF CA4IE CA3IE TX2IE RC2IE SPEN2 RX92 SREN2 CREN2 FERR2 
	OERR2 RX9D2 CSRC2 TX92 TXEN2 SYNC2 TRMT2 TX9D2 DDRF7 DDRF6 DDRF5 DDRF4 
	DDRF3 DDRF2 DDRF1 DDRF0 DDRG7 DDRG6 DDRG5 DDRG4 DDRG3 DDRG2 DDRG1 DDRG0 
	DC1PW3 DC0PW3 TM2PW3 DC9PW3 DC8PW3 DC7PW3 DC6PW3 DC5PW3 DC4PW3 DC3PW3 DC2PW3 
	CA4OVF CA3OVF CA4ED1 CA4ED0 CA3ED1 CA3ED0 PWM3ON RH7 RH6 RH5 RH4 RH3 RH2 RH1 RH0 
	RJ7 RJ6 RJ5 RJ4 RJ3 RJ2 RJ1 RJ0 DDRH7 DDRH6 DDRH5 DDRH4 DDRH3 DDRH2 DDRH1 DDRH0 
	DDRJ7 DDRJ6 DDRJ5 DDRJ4 DDRJ3 DDRJ2 DDRJ1 DDRJ0 FPMM2 BODEN1 ADTST TSTMUX FPMM1 
	GLWP FPMM0 NWDT1 SOSC1 SOSC0 LF WDTPS1 WDTPS256 WDTPS64 
	MICROPROCESSOR MICROCONTROLLER EXT_MICROCTRL TOCKI PR3 NWDT0

StringBegChar:          "
StringEndChar:          "
MultilineStrings:       0
UsePreprocessor:        0
CurrLineHighlighted:    0


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                        and third (optional) represents font attribute:
//                        B - bold
//                        I - italic
//                        U - underline
//                        S - strike out
//                        attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                        clBlack, clMaroon, clGreen, clOlive, clNavy,
//                        clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                        clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                        clDkGray, clWhite, clScrollBar, clBackground,
//                        clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                        clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                        clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                        clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                        clGrayText, clBtnText, clInactiveCaptionText,
//                        clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                        clInfoBk
//                      as value, it could be used hex numeric constant too:
//                        $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               clWindowText clWindow
Keyword1Col:            clBlue clWindow
Keyword2Col:            clRed clWindow
Keyword3Col:            clMaroon clWindow
IdentifierCol:          clWindowText clWindow
CommentCol:             clGreen clWindow I
NumberCol:              clRed clWindow
StringCol:              clMaroon clWindow
SymbolCol:              clGray clWindow
PreprocessorCol:        clBlue clWindow
SelectionCol:           clWhite clNavy
CurrentLineCol:         clBlack clYellow

OverrideTxtFgColor:     0
BlockAutoindent:        1
BlockBegStr:            {
BlockEndStr:            }

MatchedBracesCol:       clRed clWindow B
