//////////////////////////////////////////////////////////////////////////////
//
// Pick Basic highlighter written by Lance Mazon, lance@dslnorthwest.net
//
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// language name

Language:               Pick Basic


//////////////////////////////////////////////////////////////////////////////
// default file filter
// note: if more than one extension is associated, eg:
// C/C++ files (*.c,*.cpp,*.h,*.hpp)|*.c;*.cpp;*.h;*.hpp

Filter:                 Pick Basic Files (*.pbs)|*.pbs


//////////////////////////////////////////////////////////////////////////////
// help file which will be invokend when F1 is pressed

HelpFile:


//////////////////////////////////////////////////////////////////////////////
// language case sensitivity
//                      0  - no
//                      1  - yes

CaseSensitive:          0


//////////////////////////////////////////////////////////////////////////////
// comment type: LineComment - comment to the end of line
// BlockCommentBeg - block comment begin, it could be
// multiline
// BlockCommentEnd - block comment end

LineComment:            *
BlockCommentBeg:
BlockCommentEnd:


//////////////////////////////////////////////////////////////////////////////
// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char

IdentifierBegChars:     a..z A..Z
IdentifierChars:        a..z A..Z _. 0..9

//////////////////////////////////////////////////////////////////////////////
// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstBegChars:       0..9


//////////////////////////////////////////////////////////////////////////////
// numeric constants characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstChars:          0..9 abcdefhABCDEFH


//////////////////////////////////////////////////////////////////////////////
// escape character

EscapeChar:


//////////////////////////////////////////////////////////////////////////////
// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into two groups which can be
// highlighted differently

// functions

KeyWords1:              ABS ALPHA CHAR COL1 COL2 CONVERT COUNT DATE DCOUNT DELETE EXTRACT
                        FIELD FINISH ICONV INDEX INSERT LEN LOCATE NUM OCONV REM
                        REPLACE RND SEQ SPACE SQRT START STEP STR SYSTEM TIME TIMEDATE
                        TRIM

// statements

KeyWords2:              ABORT BEGIN CASE CHAIN COM DEBUG DELETE DIM ECHO ON OFF END
                        EQUATE EXECUTE FOOTING FOR NEXT GOSUB GOTO HEADING IF THEN
                        INPUT MAT MATREAD MATWRITE MATWRITEU NOT NULL ON OPEN PAGE
                        PRECISION PRINT PRINTER CLOSE PROCREAD PROCWRITE PROMPT READ
                        READNEXT READU READV READVU WRITEV WRITEVU RELEASE SLEEP STOP
                        WRITEU STEP UNTIL RUN RETURNING MATCHES LOOP REPEAT DO INSERT
                        CAPTURING BREAK TO ELSE CALL FROM LOCKED GO WRITE RETURN INCLUDE
                        EQU

// other

KeyWords3:              AND OR LE GE LT GT EQ


//////////////////////////////////////////////////////////////////////////////
// string delimiter: StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings, as perl
// has it

StringBegChar:          '"
StringEndChar:          '"
MultilineStrings:       0


//////////////////////////////////////////////////////////////////////////////
// use preprocessor: 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be
// highlighted with Preprocessor defined colors

UsePreprocessor:        0


//////////////////////////////////////////////////////////////////////////////
// highlight line: 0 - no
// 1 - yes
// note: if yes, current line will be highlighted

CurrLineHighlighted:    1


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                        and third (optional) represents font attribute:
//                        B - bold
//                        I - italic
//                        U - underline
//                        S - strike out
//                        attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                        clBlack, clMaroon, clGreen, clOlive, clNavy,
//                        clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                        clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                        clDkGray, clWhite, clScrollBar, clBackground,
//                        clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                        clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                        clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                        clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                        clGrayText, clBtnText, clInactiveCaptionText,
//                        clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                        clInfoBk
//                      as value, it could be used hex numeric constant too:
//                        $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               clWindowText clWindow
Keyword1Col:            clNavy clWindow
Keyword2Col:            clPurple clWindow
Keyword3Col:            clBlue clWindow
IdentifierCol:          clWindowText clWindow
CommentCol:             clGreen clWindow I
NumberCol:              clRed clWindow
StringCol:              clMaroon clWindow
SymbolCol:              clGray clWindow
PreprocessorCol:        clBlue clWindow
SelectionCol:           clWhite clNavy
CurrentLineCol:         clBlack $00FFC0C0

OverrideTxtFgColor:     0
BlockAutoindent:        0
BlockBegStr:
BlockEndStr:
MatchedBracesCol:       clWindowText clWindow
Keyword4Col:            clWindowText clWindow
Keyword5Col:            clWindowText clWindow
