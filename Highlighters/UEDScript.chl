// Language name (user language name)
Language:            UnrealEd

// default file filter
// note: if more than one extension is associated, eg:
// C/C++ files (*.c,*.cpp,*.h,*.hpp)|*.c;*.cpp;*.h;*.hpp
Filter:                 UnrealScript (*.uc)|*.uc

// help file which will be invokend when F1 is pressed
HelpFile:

// language case sensitivity
//                   0  - no
//                   1  - yes
CaseSensitive:       0

// comment type:
// LineComment - comment to the end of line
// BlockCommentBeg - block comment begin, it could be multiline
// BlockCommentEnd - block comment end
LineComment:         //
BlockCommentBeg:     /*
BlockCommentEnd:     */

// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// IdentifierBegChar - Identifier begin characters
IdentifierBegChars:  a..z A..Z _
IdentifierChars:     a..z A..Z _ 0..9

// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other
NumConstBegChars:    0..9

// numeric constants characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other
NumConstChars:       0..9 .abcdefhABCDEFH

// escape character
EscapeChar:          \

// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into tree groups which can be
// highlighted differently
KeyWords1:

class
event
function
var
const
enum
struct
operator
preoperator
postoperator
extends
native
private
int
name
editconst
noexport
config
globalconfig
float
byte
array
static
final
bool
skip
string
defaultproperties
return
out
coerce
optional
nativereplication
abstract
transient
export
editinline
replication
unreliable
if
then
else
reliable
while
break
latent
simulated
true
false
local
for
switch
case
localized
exportstructs
input
forEach
exec
new
spawn
state
ignores
collapsecategories
hidecategories
placeable
continue
do
until
none
self
vector
rotator

//KeyWords2:
//KeyWords3:

// string delimiter:
// StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings,
// as perl has it
StringBegChar:       " '
StringEndChar:       " '
MultilineStrings:    0

// use preprocessor:
// 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be
// highlighted with Preprocessor defined colors
UsePreprocessor:     1

// highlight line:
// 0 - no
// 1 - yes
// note: if yes, current line will be highlighted
CurrLineHighlighted:    1

// colors
// note:             first value is foreground, second is
//                   background color
//                     and third (optional) is font attribute:
//                     B - bold
//                     I - italic
//                     U - underline
//                     S - strike out
//                     attributes can be combined: eg. B or BI
//                   as value, it could be used any standard
//                   windows color:
//                     clBlack, clMaroon, clGreen, clOlive,
//                     clNavy, clPurple, clTeal, clGray,
//                     clSilver, clRed, clLime, clYellow,
//                     clBlue, clFuchsia, clAqua, clLtGray,
//                     clDkGray, clWhite, clScrollBar,
//                     clBackground, clActiveCaption,
//                     clInactiveCaption, clMenu, clWindow,
//                     clWindowFrame, clMenuText, clWindowText,
//                     clCaptionText, clActiveBorder,
//                     clInactiveBorder, clAppWorkSpace,
//                     clHighlight, clHighlightText, clBtnFace,
//                     clBtnShadow, clGrayText, lBtnText,
//                     clInactiveCaptionText, clBtnHighlight,
//                     cl3DDkShadow, cl3DLight, clInfoText,
//                     clInfoBk
//                   as value, it could be used hex numeric
//                   constant too:
//                     $BBGGRR - BB: blue, GG: green, RR: red,
//                               eg: $FF6A00
SpaceCol:               clWhite $00400000
Keyword1Col:            clAqua $00400000
Keyword2Col:            clAqua $00400000
Keyword3Col:            clAqua $00400000
IdentifierCol:          clWhite $00400000
CommentCol:             clLime $00400000
NumberCol:              clWhite $00400000
StringCol:              clLime $00400000
SymbolCol:              clWhite $00400000
PreprocessorCol:        clGray $00400000
SelectionCol:           $00400000 $00BFFFFF

// If CurrLineHighlighted: 1
CurrentLineCol:         clBlack $00500000

OverrideTxtFgColor:     0
BlockAutoindent:        0
BlockBegStr:            {
BlockEndStr:
MatchedBracesCol:       clYellow $00400000


