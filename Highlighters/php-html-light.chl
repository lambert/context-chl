//////////////////////////////////////////////////////////////////////////////
//
// x86 Assembly highlighter written by Eden Kirin, foetus@aphex.fpz.hr
//
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// language name

Language:               php-html-light


//////////////////////////////////////////////////////////////////////////////
// default file filter
// note: if more than one extension is associated, eg:
// C/C++ files (*.c,*.cpp,*.h,*.hpp)|*.c;*.cpp;*.h;*.hpp

Filter:                 PHP Files (*.php*)|*.php;*.php3


//////////////////////////////////////////////////////////////////////////////
// help file which will be invokend when F1 is pressed

HelpFile:


//////////////////////////////////////////////////////////////////////////////
// language case sensitivity
//                      0  - no
//                      1  - yes

CaseSensitive:          1


//////////////////////////////////////////////////////////////////////////////
// comment type: LineComment - comment to the end of line
// BlockCommentBeg - block comment begin, it could be
// multiline
// BlockCommentEnd - block comment end

LineComment:            //
BlockCommentBeg:        /* <<!-- 
BlockCommentEnd:        */ -->> 


//////////////////////////////////////////////////////////////////////////////
// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char

IdentifierBegChars:     a..z A..Z  % . | = & , ; ! + - '
IdentifierChars:        a..z A..Z _ =  - . ; '

//////////////////////////////////////////////////////////////////////////////
// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other



NumConstBegChars:       $  &
NumConstChars:          0..9 a..z A..Z _  . ;





//////////////////////////////////////////////////////////////////////////////
// escape character

EscapeChar:             \


//////////////////////////////////////////////////////////////////////////////
// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into two groups which can be
// highlighted differently

// op codes

Variable:               php

KeyWords1:              SELECT INSERT INTO VALUES SET JOIN UPDATE DELETE LIKE FROM WHERE ORDER BY GROUP BY
                        AND OR IN LIMIT % AS " '  ,  = && || == != .= + - ===
                        width= border= height= cellpadding= cellspacing= name= bgcolor= valign=
                        rel= href= type= value= action= method= class= onclick= onmouseover= onmouseout=
			onsubmit= onchange= onfocus= onblur= onload= checked disabled 
			http-equiv= content= charset= style= lt gt rowspan= color= enctype=
			colspan= src= align= language= cols= rows= height= selected

//more codes
KeyWords2:              html head title meta link script body font table tr td th font div pre
                        b i br p form input select a img hr h1 h2 h3 h4 h5 textarea option

// and this
KeyWords3:              include require class function new Array query next_record new
                        for foreach while switch case break and or default
                        print print_r echo if else elseif as global htmlentities
                        is_array strstr ucfirst urlencode var return count
			fopen fclose
			break; return; ; . 
			
                        


//////////////////////////////////////////////////////////////////////////////
// string delimiter: StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings, as perl
// has it

StringBegChar:          
StringEndChar:          
MultilineStrings:       0


//////////////////////////////////////////////////////////////////////////////
// use preprocessor: 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be
// highlighted with Preprocessor defined colors

UsePreprocessor:        1


//////////////////////////////////////////////////////////////////////////////
// highlight line: 0 - no
// 1 - yes
// note: if yes, current line will be highlighted

CurrLineHighlighted:    1


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                        and third (optional) represents font attribute:
//                        B - bold
//                        I - italic
//                        U - underline
//                        S - strike out
//                        attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                        clBlack, clMaroon, clGreen, clOlive, clNavy,
//                        clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                        clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                        clDkGray, clWhite, clScrollBar, clBackground,
//                        clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                        clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                        clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                        clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                        clGrayText, clBtnText, clInactiveCaptionText,
//                        clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                        clInfoBk
//                      as value, it could be used hex numeric constant too:
//                        $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               clWindowText clWindow
Keyword1Col:            clRed clWindow
Keyword2Col:            $000080FF clWindow
Keyword3Col:            clBlue $00C0FFFF
IdentifierCol:          $00333333 clWindow
CommentCol:             clGreen clWindow I
NumberCol:              clNavy $00C0FFFF U
StringCol:              clRed clWindow
SymbolCol:              $0000C000 clWindow
PreprocessorCol:        clGreen clWindow I
SelectionCol:           clWhite clNavy
CurrentLineCol:         clBlack $00EEEEEE

OverrideTxtFgColor:     0
BlockAutoindent:        1
BlockBegStr:            {
BlockEndStr:            }

