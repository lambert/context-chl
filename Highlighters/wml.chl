//////////////////////////////////////////////////////////////////////////////
//
// WML highlighter written by Bruno Gonçalves de Moraes, bgmoraes@yahoo.com.br
//
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// language name

Language:               WML


//////////////////////////////////////////////////////////////////////////////
// default file filter
// note: if more than one extension is associated, eg:
// C/C++ files (*.c,*.cpp,*.h,*.hpp)|*.c;*.cpp;*.h;*.hpp

Filter:                 WML files (*.wml)|*.wml


//////////////////////////////////////////////////////////////////////////////
// help file which will be invokend when F1 is pressed

HelpFile:


//////////////////////////////////////////////////////////////////////////////
// language case sensitivity
//                      0  - no
//                      1  - yes

CaseSensitive:          1


//////////////////////////////////////////////////////////////////////////////
// comment type: LineComment - comment to the end of line
// BlockCommentBeg - block comment begin, it could be
// multiline
// BlockCommentEnd - block comment end

LineComment:
BlockCommentBeg:        <!--
BlockCommentEnd:        -->


//////////////////////////////////////////////////////////////////////////////
// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char

IdentifierBegChars:     a..z A..Z _%@.
IdentifierChars:        a..z A..Z _ 0..9 ?

//////////////////////////////////////////////////////////////////////////////
// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstBegChars:       0..9


//////////////////////////////////////////////////////////////////////////////
// numeric constants characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstChars:          0..9 abcdefhABCDEFH


//////////////////////////////////////////////////////////////////////////////
// escape character

EscapeChar:


//////////////////////////////////////////////////////////////////////////////
// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into two groups which can be
// highlighted differently

                        // TAGS
KeyWords1:              a access anchor b big br card do em fieldset go head i img input meta noop
                        onevent optgroup option p postfield prev reader refresh select setvar
                        small strong table td template timer tr u wml


                        // ATTRIBUTES
KeyWords2:              id name value title href type onenterforward src
                        localsrc alt label onenterbackward ontimer format
                        align

                        acceptcharset accesskey align alt cachecontrol class columns content
                        domain enctype emptyok format forua height href hspace httpequiv id
                        iname ivalue label localsrc maxlength method mode multiple name
                        newcontext onenterbackward onenterforward onpick ontimer optional ordered
                        path scheme sendreferer size src tabindex title type value vspace width
                        xmllang xmlspace


KeyWords3:              //MY EXTENSION TAGS
                        barcode beep form help html magnetic pinpad pre report setenv smart vml
                        //MY EXTENSION ATTRIBUTES
                        abort account autoprint delimiter device dialup	direction hangup echo
                        encoding font frequency fullformat keypadname keypadvalue literals logok
                        masterkey password timein timeout track1maxlength track1name track1offset
                        track1value track2maxlength track2name track2offset track2value
                        track3maxlength track3name track3offset track3value user workingkey

//////////////////////////////////////////////////////////////////////////////
// string delimiter: StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings, as perl
// has it

StringBegChar:          " '
StringEndChar:          " '
MultilineStrings:       1


//////////////////////////////////////////////////////////////////////////////
// use preprocessor: 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be
// highlighted with Preprocessor defined colors

UsePreprocessor:        0


//////////////////////////////////////////////////////////////////////////////
// highlight line: 0 - no
// 1 - yes
// note: if yes, current line will be highlighted

CurrLineHighlighted:    0


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                        and third (optional) represents font attribute:
//                        B - bold
//                        I - italic
//                        U - underline
//                        S - strike out
//                        attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                        clBlack, clMaroon, clGreen, clOlive, clNavy,
//                        clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                        clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                        clDkGray, clWhite, clScrollBar, clBackground,
//                        clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                        clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                        clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                        clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                        clGrayText, clBtnText, clInactiveCaptionText,
//                        clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                        clInfoBk
//                      as value, it could be used hex numeric constant too:
//                        $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               clWindowText clWindow
Keyword1Col:            $00C00000 clWindow B
Keyword2Col:            $00C00000 clWindow
Keyword3Col:            clGreen clWindow
IdentifierCol:          clWindowText clWindow
CommentCol:             $00909090 clWindow I
NumberCol:              clGray clWindow
StringCol:              clMaroon clWindow
SymbolCol:              clNavy clWindow B
PreprocessorCol:        clBlue clWindow
SelectionCol:           clWhite clNavy
CurrentLineCol:         clBlack clYellow

OverrideTxtFgColor:     0
BlockAutoindent:        1
BlockBegStr:            2
BlockEndStr:
