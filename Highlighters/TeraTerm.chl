//////////////////////////////////////////////////////////////////////////////
//
// TeraTerm highlighter written by Anton Kauscheder, kauscheder@t-online.de
//
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// language name

Language:               TeraTerm Macro


//////////////////////////////////////////////////////////////////////////////
// default file filter
// note: if more than one extension is associated, eg:
// C/C++ files (*.c,*.cpp,*.h,*.hpp)|*.c;*.cpp;*.h;*.hpp

Filter:                 TeraTerm Macro files (*.ttl)|*.ttl

Description: TeraTerm highlighter written by Anton Kauscheder

//////////////////////////////////////////////////////////////////////////////
// help file which will be invokend when F1 is pressed

HelpFile:


//////////////////////////////////////////////////////////////////////////////
// language case sensitivity
//                      0  - no
//                      1  - yes

CaseSensitive:          0


//////////////////////////////////////////////////////////////////////////////
// comment type: LineComment - comment to the end of line
// BlockCommentBeg - block comment begin, it could be
// multiline
// BlockCommentEnd - block comment end

LineComment:            ;
BlockCommentBeg:
BlockCommentEnd:


//////////////////////////////////////////////////////////////////////////////
// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char

IdentifierBegChars:     a..z A..Z _%@.
IdentifierChars:        a..z A..Z _ 0..9 ?

//////////////////////////////////////////////////////////////////////////////
// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstBegChars:       0..9


//////////////////////////////////////////////////////////////////////////////
// numeric constants characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstChars:          0..9


//////////////////////////////////////////////////////////////////////////////
// escape character

EscapeChar:


//////////////////////////////////////////////////////////////////////////////
// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into two groups which can be
// highlighted differently

// op codes

KeyWords1:              bplusrecv bplussend chagedir clearscreen closett
                        connect disconnect enablekeyb flushrecv gettitle
                        kmtfinish kmtget kmtrecv kmtsend loadkeymap 
                        logclose logopen logpause logstart logwrite 
                        quickvanrecv quickvansend recvln restoresetup
                        send sendbreak sendfile sendkcode sendln setecho
                        setsync settitle showtt testlink unlink wait
                        waitevent waitln waitrcv xmodemrecv xmodemsend
                        zmodemrecv zmodemsend
                        end execcmd exit include pause
                        code2str int2str str2code str2int strcompare strconcat
                        strcopy strlen strscan
                        fileclose fileconcat filecopy filecreate filedelete
                        filemarkptr fileopen filereadln filerename filesearch
                        fileseek fileseekback filestrseek filestrseek2
                        filewrite filewriteln findfirst findnext findclose
                        getdir makepath setdir
                        delpassword getpassword
                        beep exec getdate getenv gettime setdate setdlgpos
                        setenv setexitcode settime show

KeyWords2:              for next if then elseif else endif while endwhile return
                        call goto
                        and or not xor
                        passwordbox closebox inputbox messagebox statusbox
                        yesnobox

// System Variables
KeyWords3:              inputstr param2 param3 result timeout



//////////////////////////////////////////////////////////////////////////////
// string delimiter: StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings, as perl
// has it

StringBegChar:          " '
StringEndChar:          " '
MultilineStrings:       0


//////////////////////////////////////////////////////////////////////////////
// use preprocessor: 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be
// highlighted with Preprocessor defined colors

UsePreprocessor:        0


//////////////////////////////////////////////////////////////////////////////
// highlight line: 0 - no
// 1 - yes
// note: if yes, current line will be highlighted

CurrLineHighlighted:    0


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                        and third (optional) represents font attribute:
//                        B - bold
//                        I - italic
//                        U - underline
//                        S - strike out
//                        attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                        clBlack, clMaroon, clGreen, clOlive, clNavy,
//                        clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                        clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                        clDkGray, clWhite, clScrollBar, clBackground,
//                        clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                        clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                        clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                        clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                        clGrayText, clBtnText, clInactiveCaptionText,
//                        clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                        clInfoBk
//                      as value, it could be used hex numeric constant too:
//                        $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               clWindowText clWindow
Keyword1Col:            clNavy clWindow
Keyword2Col:            clPurple clWindow
Keyword3Col:            clGreen clWindow
IdentifierCol:          clWindowText clWindow
CommentCol:             clGray clWindow I
NumberCol:              clRed clWindow
StringCol:              clMaroon clWindow
SymbolCol:              clWindowText clWindow
PreprocessorCol:        clBlue clWindow
SelectionCol:           clWhite clNavy
CurrentLineCol:         clBlack clYellow

