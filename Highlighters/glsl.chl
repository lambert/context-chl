// ----------------------------------------------------------------
// OpenGL Shading Language Highlighter
//
// (C) 2003 Markus Buretorp (http://sunray.cplusplus.se)
// ----------------------------------------------------------------

Language:               OpenGL Shading Language
Filter:                 GLSL files (*.glsl)|*.glsl
HelpFile:
CaseSensitive:          1
LineComment:            //
BlockCommentBeg:		/*
BlockCommentEnd:		*/
BlockAutoindent:        0
BlockBegStr:            {
BlockEndStr:
IdentifierBegChars:     a..z A..Z _%@.
IdentifierChars:        a..z A..Z _ 0..9 ?
NumConstBegChars:       0..9
NumConstChars:          0..9 abcdefhABCDEFH .
StringBegChar:          "
StringEndChar:          "
MultilineStrings:       0
UsePreprocessor:        1
CurrLineHighlighted:    1

//
// Colors
//
SpaceCol:               clWindowText clWindow
Keyword1Col:            $00DD7722 clWindow
Keyword2Col:            $00AA2211 clWindow
Keyword3Col:            $00606060 clWindow
IdentifierCol:          $00303030 clWindow
CommentCol:             clGreen clWindow
NumberCol:              $000000C0 clWindow
StringCol:              clMaroon clWindow
SymbolCol:              clGray clWindow
PreprocessorCol:        $007D593C clWindow
SelectionCol:           clWhite clNavy
CurrentLineCol:         clBlack $00C0FFFF
MatchedBracesCol:       clRed clWindow
OverrideTxtFgColor:     0

//
// Keywords
//
KeyWords1:
attribute
const
uniform 
varying
break
continue 
do 
for 
while
if 
else
in 
out 
inout
true
false
discard 
return
// The following keywords are reserved for future use. Using them will result in an error:
asm
class
union
enum
typedef
template
goto
switch
default
inline
noinline
volatile
public
static
extern
external
input
output
sizeof
cast
namespace
using

//
// Datatypes
//
float 
int 
void 
bool
mat2 
mat3 
mat4
vec2 
vec3 
vec4
ivec2 
ivec3 
ivec4 
bvec2 
bvec3 
bvec4
sampler1D 
sampler2D 
sampler3D 
samplerCube 
sampler1DShadow 
sampler2DShadow
struct
// The following keywords are reserved for future use. Using them will result in an error:
hvec2 
hvec3 
hvec4 
dvec2 
dvec3 
dvec4 
fvec2 
fvec3
fvec4
sampler2DRect
sampler3DRect
long
short
double
half
fixed
unsigned

//
// Built-In Functions
//
KeyWords2:
// Angle and Tr igonometry Functions
radians
degrees
sin
cos
tan
asin
acos
atan
// Exponential Functions
pow
exp2
log2
sqrt
inversesqrt
// Common functions
abs
sign
floor
ceil
fract
mod
min
max
clamp
mix
step
smoothstep
// Geometric Functions
length
distance
dot
cross
normalize
transform
faceforward
reflect
matrixCompMult
// Vector Relat ional Functions
lessThan
lessThanEqual
greaterThan
greaterThanEqual
equal
notEqual
any
all
not
// Texture Lookup Functions
texture1D
texture1DProj
texture1DProjLod
texture2D
texture2DProj
texture2DProjLod
texture3D
texture3DProj
texture3DProjLod
textureCube
textureCubeLod
shadow1D
shadow1DProj
shadow1DLod
shadow1DProjLod
shadow2D
shadow2DProj
shadow2DLod
shadow2DProjLod
// Fragment Processing Funct ions
dFdx
dFdy
fwidth
// Noise Functions
noise1
noise2
noise3
noise4

//
// Built-In Variables
//
KeyWords3:
gl_Position
gl_PointSize
gl_ClipVertex
gl_FragCoord
gl_FrontFacing
gl_FragColor
gl_FragDepth
gl_Color
gl_SecondaryColor
gl_Normal
gl_Vertex
gl_MultiTexCoord0
gl_MultiTexCoord1
gl_MultiTexCoord2
gl_MultiTexCoord3
gl_MultiTexCoord4
gl_MultiTexCoord5
gl_MultiTexCoord6
gl_MultiTexCoord7
gl_FogCoord

//
// Built-Un Constants
//
gl_MaxLights
gl_MaxClipPlanes
gl_MaxTextureUnits
gl_MaxTextureCoordsARB
gl_MaxVertexAttributesGL2
gl_MaxVertexUniformFloatsGL2
gl_MaxVaryingFloatsGL2
gl_MaxVertexTextureUnitsGL2
gl_MaxFragmentTextureUnitsGL2
gl_MaxFragmentUniformFloatsGL2

//
// Built-In Uniform State
//
gl_ModelViewMatrix
gl_ProjectionMatrix
gl_ModelViewProjectionMatrix
gl_NormalMatrix
gl_TextureMatrix
gl_NormalScale
gl_DepthRange
gl_ClipPlane
gl_Point
gl_FrontMaterial
gl_BackMaterial
gl_LightSource
gl_LightModel
gl_FrontLightModelProduct
gl_BackLightModelProduct
gl_FrontLightProduct
gl_LightProducts
gl_TextureEnvColor
gl_EyePlaneS
gl_EyePlaneT
gl_EyePlaneR
gl_EyePlaneQ
gl_ObjectPlaneS
gl_ObjectPlaneT
gl_ObjectPlaneR
gl_ObjectPlaneQ
gl_Fog


//
// Varying Variables
//
gl_FrontColor
gl_BackColor
gl_FrontSecondaryColor
gl_BackSecondaryColor
gl_TexCoord
gl_FogFragCoord
gl_Color
gl_SecondaryColor
gl_TexCoord
gl_FogFragCoord

//
// Predefined macros
//
__LINE__
__FILE__
__VERSION__

//
// Compiler directives
//
#define
#undef
#if
#ifdef
#ifndef
#else
#elif
#endif
#error
#pragma
#line
#defined
#
Keyword4Col:            clWindowText clWindow
Keyword5Col:            clWindowText clWindow
