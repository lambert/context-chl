//////////////////////////////////////////////////////////////////////////////
//
// F# (FSharp) highlighter
//
//////////////////////////////////////////////////////////////////////////////

Language:               F#
Filter:                 F# files (*.ml)|*.ml
HelpFile:
CaseSensitive:          1
LineComment:            
BlockCommentBeg:        (*
BlockCommentEnd:        *)
IdentifierBegChars:     a..z A..Z _
IdentifierChars:        a..z A..Z _ 0..9
NumConstBegChars:       0..9
NumConstChars:          0..9 abcdefx.
EscapeChar:             \

KeyWords1:              and as begin do done downto else end exception for
			fun function in if let match module not open of prefix
			raise rec struct then to try type while with
	
KeyWords2:		int float bool string char true false

StringBegChar:          " '
StringEndChar:          " '
MultilineStrings:       1
UsePreprocessor:        1
CurrLineHighlighted:    1

SpaceCol:               clWindowText clWindow
Keyword1Col:            clBlue clWindow
Keyword2Col:            clBlue clWindow
IdentifierCol:          clWindowText clWindow
CommentCol:             clGreen clWindow I
NumberCol:              clBlack clWindow
StringCol:              clTeal clWindow
SymbolCol:              clBlack clWindow
PreprocessorCol:        clBlue clWindow
SelectionCol:           clWindowText $00D2D2D2
CurrentLineCol:         clWindowText $00C0FFFF

OverrideTxtFgColor:     0
BlockAutoindent:        0
BlockBegStr:            
BlockEndStr:            
Keyword4Col:            clBlack clWindow B
Keyword5Col:            clRed clWindow B
MatchedBracesCol:       clWindowText clWindow
Keyword3Col:            clNavy clWindow



