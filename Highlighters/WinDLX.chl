//////////////////////////////////////////////////////////////////////////////
//
//  WinDLX Assembly highlighter written by Radek Novák, r_n@seznam.cz
//
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// language name

Language:               WinDLX assembler


//////////////////////////////////////////////////////////////////////////////
// default file filter
// note: if more than one extension is associated, eg:
// C/C++ files (*.c,*.cpp,*.h,*.hpp)|*.c;*.cpp;*.h;*.hpp

Filter:                 WinDLX assembler files (*.s)|*.s


//////////////////////////////////////////////////////////////////////////////
// help file which will be invokend when F1 is pressed

HelpFile:


//////////////////////////////////////////////////////////////////////////////
// language case sensitivity
//                      0  - no
//                      1  - yes

CaseSensitive:          0


//////////////////////////////////////////////////////////////////////////////
// comment type: LineComment - comment to the end of line
// BlockCommentBeg - block comment begin, it could be
// multiline
// BlockCommentEnd - block comment end

LineComment:            ;
BlockCommentBeg:
BlockCommentEnd:


//////////////////////////////////////////////////////////////////////////////
// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char

IdentifierBegChars:     a..z A..Z _%@.
IdentifierChars:        a..z A..Z _ 0..9 ?

//////////////////////////////////////////////////////////////////////////////
// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstBegChars:       0..9


//////////////////////////////////////////////////////////////////////////////
// numeric constants characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstChars:          0..9 abcdefhABCDEFH


//////////////////////////////////////////////////////////////////////////////
// escape character

EscapeChar:


//////////////////////////////////////////////////////////////////////////////
// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into two groups which can be
// highlighted differently

// op codes

KeyWords1:              lb lbu lh lhu lw lf ld sb sh sw sf sd movi2fp 
			movf movd movi2s movs2i add addi addu addui sub
			subi subu subui mult multu div divu and andi or
			ori xor xori lhi sll srl sra slli srli srai 
			seq sne slt sgt sle sge seqi snei slti sgti slei
			sgei sequ sneu sltu sgtu sleu sgeu sequi sneui
			sltui sgtui sleui sgeui nop beqz bnez bfpt bfpf
			j jr jal jalr trap rfe addd addf subd subf multd
			multf divd divf cvtf2d cvtd2f cvtf2i cvti2f cvtd2i
			cvti2d eqd ned ltd gtd led ged eqf nef ltf gtf
			lef gef

// registers

KeyWords2:              r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
			r10 r11 r12 r13 r14 r15 r16 r17 r18 r19
			r20 r21 r22 r23 r24 r25 r26 r27 r28 r29
			r30 r31 r32
			f0 f1 f2 f3 f4 f5 f6 f7 f8 f9
			f10 f11 f12 f13 f14 f15 f16 f17 f18 f19
			f20 f21 f22 f23 f24 f25 f26 f27 f28 f29
			f30 f31 f32


KeyWords3:              .align .ascii .asciiz .byte .data .double .global
			.space .text .word


//////////////////////////////////////////////////////////////////////////////
// string delimiter: StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings, as perl
// has it

StringBegChar:          '
StringEndChar:          '
MultilineStrings:       0


//////////////////////////////////////////////////////////////////////////////
// use preprocessor: 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be
// highlighted with Preprocessor defined colors

UsePreprocessor:        0


//////////////////////////////////////////////////////////////////////////////
// highlight line: 0 - no
// 1 - yes
// note: if yes, current line will be highlighted

CurrLineHighlighted:    0


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                        and third (optional) represents font attribute:
//                        B - bold
//                        I - italic
//                        U - underline
//                        S - strike out
//                        attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                        clBlack, clMaroon, clGreen, clOlive, clNavy,
//                        clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                        clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                        clDkGray, clWhite, clScrollBar, clBackground,
//                        clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                        clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                        clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                        clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                        clGrayText, clBtnText, clInactiveCaptionText,
//                        clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                        clInfoBk
//                      as value, it could be used hex numeric constant too:
//                        $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               $00505050 $00404040
Keyword1Col:            clAqua $00404040
Keyword2Col:            clLime $00404040
Keyword3Col:            clFuchsia $00404040
IdentifierCol:          $00B0B0B0 $00404040
CommentCol:             clYellow $00404040
NumberCol:              clSilver $00404040
StringCol:              clWhite $00404040
SymbolCol:              clRed $00404040
PreprocessorCol:        clRed $00404040
SelectionCol:           clWhite clNavy
CurrentLineCol:         clBlack clYellow

OverrideTxtFgColor:     0
BlockAutoindent:        0
BlockBegStr:
BlockEndStr:
MatchedBracesCol:       clWindowText clWindow
