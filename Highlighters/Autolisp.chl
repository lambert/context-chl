//////////////////////////////////////////////////////////////////////////////
//
// AutoLISP R14 highlighter 
// written by Germán Giraldo G. - tripleg@tutopia.com
//
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// language name

Language:               AutoLISP R14


//////////////////////////////////////////////////////////////////////////////
// default file filter
// note: if more than one extension is associated, eg:
// C/C++ files (*.c,*.cpp,*.h,*.hpp)|*.c;*.cpp;*.h;*.hpp

Filter:                 Autolisp files (*.lsp)|*.lsp


//////////////////////////////////////////////////////////////////////////////
// help file which will be invokend when F1 is pressed

HelpFile:


//////////////////////////////////////////////////////////////////////////////
// language case sensitivity
//                      0  - no
//                      1  - yes

CaseSensitive:          0


//////////////////////////////////////////////////////////////////////////////
// comment type: LineComment - comment to the end of line
// BlockCommentBeg - block comment begin, it could be
// multiline
// BlockCommentEnd - block comment end

LineComment:            ;
BlockCommentBeg:        /*
BlockCommentEnd:        */


//////////////////////////////////////////////////////////////////////////////
// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char

IdentifierBegChars:     a..z A..Z _%@?&$#
IdentifierChars:        a..z A..Z _ 0..9 ?&%$#@:

//////////////////////////////////////////////////////////////////////////////
// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstBegChars:       0..9


//////////////////////////////////////////////////////////////////////////////
// numeric constants characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstChars:          0..9 .


//////////////////////////////////////////////////////////////////////////////
// escape character

EscapeChar:             \


//////////////////////////////////////////////////////////////////////////////
// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into two groups which can be
// highlighted differently

// op codes

KeyWords1:              - * *error* / /= ~ + < <= = => > 1- 1+ abs acad_colordlg
                        acad_strlsort alert and angle angtof angtos append apply
                        ascii assoc atan atof atoi atom atoms-family autoload
                        boole boundp caaaar caaadr caaar caadar caaddr caadr
                        caar cadaar cadadr cadar caddar cadddr caddr cadr car
                        cdaaar cdaadr cdaar cdadar cdaddr cdadr cdar cddaar
                        cddadr cddar cdddar cddddr cdddr cddr cdr chr close
                        command cond cons cos cvport cvunit defun distance
                        distof entdel entget entlast entmake entmod entnext
                        entsel entupd eq equal eval exit exp expt findfile
                        fix float foreach gcd getangle getcorner getdist
                        getenv getfiled getint getkword getorient getpoint
                        getreal getstring getvar graphscr grdraw grread grtext
                        grvecs handent help if initget inters itoa lambda last
                        length list listp load log logand logior lsh mapcar
                        max mem member menucmd min minusp nentsel nentselp
                        not nth null numberp open or osnap polar prin1 princ
                        print progn prompt quit quote read read-char read-line
                        redraw rem repeat reverse rtos set setfunhelp setq
                        setvar setview sin snvalid sqrt ssadd ssdel ssget
                        ssgetfirst sslength ssmemb ssname ssnamex sssetfirst
                        startapp strcase strcat strlen subst substr tblnext
                        tblobjname tblsearch terpri textbox textpage textscr
                        trace trans type untrace wcmatch ver while vports
                        write-char write-line zerop


// registers

KeyWords2:              action_tile mode_tile set_tile start_dialog new_dialog
                        start_image fill_image end_image dimx_tile dimy_tile
                        start_list end_list slide_image vector_image unload_dialog
                        NEW_POSITIONED_DIALOG GET_TILE GET_ATTR_STRING GET_ATTR
                        DONE_POSITIONED_DIALOG DONE_DIALOG CLIENT_DATA_TILE
                        ADD_LIST $data $key $value $reason



KeyWords3:


//////////////////////////////////////////////////////////////////////////////
// string delimiter: StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings, as perl
// has it

StringBegChar:          "
StringEndChar:          "
MultilineStrings:       0


//////////////////////////////////////////////////////////////////////////////
// use preprocessor: 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be
// highlighted with Preprocessor defined colors

UsePreprocessor:        0


//////////////////////////////////////////////////////////////////////////////
// highlight line: 0 - no
// 1 - yes
// note: if yes, current line will be highlighted

CurrLineHighlighted:    0


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                        and third (optional) represents font attribute:
//                        B - bold
//                        I - italic
//                        U - underline
//                        S - strike out
//                        attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                        clBlack, clMaroon, clGreen, clOlive, clNavy,
//                        clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                        clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                        clDkGray, clWhite, clScrollBar, clBackground,
//                        clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                        clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                        clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                        clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                        clGrayText, clBtnText, clInactiveCaptionText,
//                        clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                        clInfoBk
//                      as value, it could be used hex numeric constant too:
//                        $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               clWindowText clWindow
Keyword1Col:            clBlue clWindow
Keyword2Col:            clNavy clWindow
Keyword3Col:            clPurple clWindow
IdentifierCol:          clWindowText clWindow
CommentCol:             clGreen clWindow
NumberCol:              clRed clWindow
StringCol:              clMaroon clWindow
SymbolCol:              clPurple clWindow
PreprocessorCol:        clBlue clWindow
SelectionCol:           clWhite clNavy
CurrentLineCol:         clBlack clYellow

