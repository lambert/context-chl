//////////////////////////////////////////////////////////////////////////////
//
// CUPL PLD Compiler tools highlighter written by Jim Granville
// http://www.designtools.co.nz/mod51.htm
//
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// language name

Language:      CUPL PLD Tools


//////////////////////////////////////////////////////////////////////////////
// default file filter
// note: if more than one extension is associated, eg:
// C/C++ files (*.c,*.cpp,*.h,*.hpp)|*.c;*.cpp;*.h;*.hpp

Filter:                 CUPL Source files (*.pld,*.si,*.cmd)|*.pld;*.si;*.cmd


//////////////////////////////////////////////////////////////////////////////
// help file which will be invoked when F1 is pressed

HelpFile:


//////////////////////////////////////////////////////////////////////////////
// language case sensitivity
//                      0  - no
//                      1  - yes
// Yes on names, but no on keywords.

CaseSensitive:          0


//////////////////////////////////////////////////////////////////////////////
// comment type: LineComment - comment to the end of line
// BlockCommentBeg - block comment begin, it could be
// multiline
// BlockCommentEnd - block comment end

LineComment:             
BlockCommentBeg:       /*
BlockCommentEnd:       */


//////////////////////////////////////////////////////////////////////////////
// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char

IdentifierBegChars:     a..z A..Z _%@.
IdentifierChars:        a..z A..Z _ 0..9 ?

//////////////////////////////////////////////////////////////////////////////
// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstBegChars:       0..9


//////////////////////////////////////////////////////////////////////////////
// numeric constants characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstChars:          0..9 abcdefhABCDEFH


//////////////////////////////////////////////////////////////////////////////
// escape character

EscapeChar:


//////////////////////////////////////////////////////////////////////////////
// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into two groups which can be
// highlighted differently

// CUPL operators
KeyWords1:  'h' 'b' 'd' $ & # ! == { } [ ]

// CUPL Keywords

KeyWords3:  APPEND ASSEMBLY ASSY COMPANY CONDITION DATE DEFAULT DESIGNER DEVICE 
		ELSE FIELD FLD FORMAT FUNCTION FUSE GROUP IF JUMP LOC LOCATION MACRO 
		MIN NAME NEXT NODE ORDER OUT PARTNO PIN PINNODE PRESENT REV REVISION 
		SEQUENCE SEQUENCED SEQUENCEJK SEQUENCERS SEQUENCET 
		TABLE VECTORS 

// Fitter Pragmas

KeyWords2:  PROPERTY ATMEL preassign MC_power open_collector JTAG power_reset 
			TDI_pullup TMS_pullup output_fast pin_keep security fast_inlatch 
			GCK_ITD Latch_Synthesis Optimize Cascade_Logic Foldback_Logic 
			Soft_Buffer XOR_Synthesis Push_Gate Verilog_sim Vhdl_sim 
			Out_Edif Global_Fold Global_OE OE_node logic_doubling twoclock 




//////////////////////////////////////////////////////////////////////////////
// string delimiter: StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings, as perl
// has it

StringBegChar:          "
StringEndChar:          "
MultilineStrings:       0


//////////////////////////////////////////////////////////////////////////////
// use preprocessor: 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be

// highlighted with Preprocessor defined colors
// Preprocessor in CUPL is $IFDEF Defname $ELSE $ENDIF
// So needs a Preprocessor Char of $, not #.
// In CUPL # is OR symbol, so enabling this makes a mess...

UsePreprocessor:        0


//////////////////////////////////////////////////////////////////////////////
// highlight line: 0 - no
// 1 - yes
// note: if yes, current line will be highlighted

CurrLineHighlighted:    0


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                        and third (optional) represents font attribute:
//                        B - bold
//                        I - italic
//                        U - underline
//                        S - strike out
//                        attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                        clBlack, clMaroon, clGreen, clOlive, clNavy,
//                        clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                        clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                        clDkGray, clWhite, clScrollBar, clBackground,
//                        clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                        clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                        clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                        clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                        clGrayText, clBtnText, clInactiveCaptionText,
//                        clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                        clInfoBk
//                      as value, it could be used hex numeric constant too:
//                        $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               clWindowText clWindow
Keyword1Col:            $00C00000 clWindow
Keyword2Col:            clPurple clWindow
Keyword3Col:            clBlue clWindow
IdentifierCol:          clWindowText clWindow
CommentCol:             clGray clWindow
NumberCol:              clRed clWindow
StringCol:              clMaroon clWindow
SymbolCol:              $00C00000 clWindow
PreprocessorCol:        clBlue clWindow
SelectionCol:           clWhite clNavy
CurrentLineCol:         clBlack clYellow

OverrideTxtFgColor:     0
BlockAutoindent:        0
BlockBegStr:
BlockEndStr:

