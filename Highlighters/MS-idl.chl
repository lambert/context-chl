//////////////////////////////////////////////////////////////////////////////
// language name

Language:               IDL


//////////////////////////////////////////////////////////////////////////////
// default file filter
// note: if more than one extension is associated, eg:
// C/C++ files (*.c,*.cpp,*.h,*.hpp)|*.c;*.cpp;*.h;*.hpp

Filter:                 MS Interface Definition language - IDL (*.idl)|*.idl


//////////////////////////////////////////////////////////////////////////////
// help file which will be invokend when F1 is pressed

HelpFile:


//////////////////////////////////////////////////////////////////////////////
// language case sensitivity
//                      0  - no
//                      1  - yes

CaseSensitive:          1


//////////////////////////////////////////////////////////////////////////////
// comment type: LineComment - comment to the end of line
// BlockCommentBeg - block comment begin, it could be
// multiline
// BlockCommentEnd - block comment end

LineComment:            //
BlockCommentBeg:        /*
BlockCommentEnd:        */


//////////////////////////////////////////////////////////////////////////////
// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char

IdentifierBegChars:     a..z A..Z _%@.
IdentifierChars:        a..z A..Z _ 0..9 ?

//////////////////////////////////////////////////////////////////////////////
// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstBegChars:       0..9


//////////////////////////////////////////////////////////////////////////////
// numeric constants characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstChars:          0..9 abcdefhABCDEFH


//////////////////////////////////////////////////////////////////////////////
// escape character

EscapeChar:


//////////////////////////////////////////////////////////////////////////////
// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into two groups which can be
// highlighted differently

// op codes

KeyWords1:               usesgetlasterror entry long int typedef const LPSTR
                         enum struct object oleautomation import HRESULT in out
                         retval aggregatable helpstringcontext notify allocate 
                         helpstringdll notify_flag appobject hidden object arrays 
                         hyper odl async id oleautomation async_uuid idempotent 
                         optimize auto_handle ignore optional bindable iid_is out 
                         Boolean immediatebind out_of_line broadcast implicit_handle 
                         partial_ignore byte import pipe byte_count importlib 
                         pointer_default call_as in pragma callback include propget 
                         char in_line propput coclass int propputref code __int3264 
                         proxy comm_status __int64 ptr const interface public 
                         context_handle last_ise range context_handle_noserialize lcid 
                         readonly context_handle_serialize length_is ref control 
                         library represent_as cpp_quote licensed requestedit custom 
                         local restricted decode long retval default max_is shape 
                         defaultbind maybe short defaultcollelem message signed 
                         defaultvalue midl_pragma warning size_is defaultvtable 
                         midl_user_allocate small dispinterface midl_user_free source 
                         displaybind min_is strict_context_handle dllname module string 
                         double ms_union struct dual ncacn_at_dsp switch enable_allocate 
                         ncacn_dnet_nsp switch_is encode ncacn_http switch_type 
                         endpoint ncacn_ip_tcp transmit_as entry ncacn_nb_ipx typedef 
                         enum ncacn_nb_nb union error_status_t ncacn_nb_tcp uidefault 
                         explicit_handle ncacn_np unique fault_status ncacn_spx unsigned 
                         first_is ncacn_vns_spp user_marshal float ncadg_ip_udp 
                         usesgetlasterror force_allocate ncadg_ipx handle ncadg_mq v1_enum 
                         handle_t ncalrpc vararg heap nocode version helpcontext nonbrowsable void 
                         helpfile noncreatable wchar_t helpstring nonextensible wire_marshal 


//////////////////////////////////////////////////////////////////////////////
// string delimiter: StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings, as perl
// has it

StringBegChar:          "
StringEndChar:          "
MultilineStrings:       0


//////////////////////////////////////////////////////////////////////////////
// use preprocessor: 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be
// highlighted with Preprocessor defined colors

UsePreprocessor:        1


//////////////////////////////////////////////////////////////////////////////
// highlight line: 0 - no
// 1 - yes
// note: if yes, current line will be highlighted

CurrLineHighlighted:    1


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                        and third (optional) represents font attribute:
//                        B - bold
//                        I - italic
//                        U - underline
//                        S - strike out
//                        attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                        clBlack, clMaroon, clGreen, clOlive, clNavy,
//                        clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                        clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                        clDkGray, clWhite, clScrollBar, clBackground,
//                        clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                        clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                        clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                        clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                        clGrayText, clBtnText, clInactiveCaptionText,
//                        clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                        clInfoBk
//                      as value, it could be used hex numeric constant too:
//                        $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               clWindowText clWindow
Keyword1Col:            clNavy clWindow
Keyword2Col:            clPurple clWindow
Keyword3Col:            clBlue clWindow
IdentifierCol:          clWindowText clWindow
CommentCol:             clGray clWindow
NumberCol:              clRed clWindow
StringCol:              clMaroon clWindow
SymbolCol:              clGray clWindow
PreprocessorCol:        clBlue clWindow
SelectionCol:           clWhite clNavy
CurrentLineCol:         clBlack clYellow




